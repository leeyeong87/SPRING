<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

<context:component-scan base-package="day0902.spring.AOP"/>
<context:annotation-config/>
<aop:aspectj-autoproxy/>
<aop:config proxy-target-class="true"/>


<!-- 	<bean id="greetingTarget" class="day0902.spring.AOP.GreetingServiceImpl">
		<property name="greeting">
			<value>Hello</value>
		</property>
	</bean>

	<bean id="logAspect" class="day0902.spring.AOP.LogAspect" />
	<bean id="performanceAspect" class="day0902.spring.AOP.PerformanceAspect" />
	
	<aop:config proxy-target-class="true">
		<aop:pointcut id="publicMethod" expression="execution(public * *(..))" />
		<aop:aspect ref="logAspect">
			<aop:before method="beforeLogging" pointcut-ref="publicMethod" />
			<aop:before method="beforeLogging" pointcut="execution(public * *(..))" />
			
			<aop:after-returning method="afterLogging"
				pointcut-ref="publicMethod" returning="returnValue" />
			<aop:after-throwing method="throwingLogging"
				pointcut-ref="publicMethod" throwing="ex" />
			<aop:after method="alwayLogging" pointcut-ref="publicMethod" />
		</aop:aspect>
		<aop:aspect ref="performanceAspect">
			<aop:around method="timeCheck" pointcut-ref="publicMethod" />
			<aop:around method="trace" 
			pointcut="execution(public * day0902.spring.AOP..*sayHello*(..))" />
		</aop:aspect>
	</aop:config> -->

</beans>